#! /bin/bash
# {{ ansible_managed }}

DRIVE="${1:-/dev/dvd}"

# Check that a CD/DVD drive was provided as the first argument
if [[ ! -b "$DRIVE" ]]; then
	echo "Usage: $0 /dev/dvd"
	exit 1
fi

# Base path for the isos
ISO_DIR="{{ fileshare_path }}/ISOs"

# Close the tray
eject -rt "$DRIVE" || exit $?

# Get the volume label, size, and block size of the CD/DVD
ISOINFO="$(isoinfo -d -i "$DRIVE")" || exit $?
LABEL="$(echo "$ISOINFO" | grep "Volume id:" | awk -F ": " '{print $2}')"
NUMBLOCKS="$(echo "$ISOINFO" | grep -i "volume size" | awk '{print $NF}')"
BLOCKSIZE="$(echo "$ISOINFO" | grep "Logical block size" | awk '{print $NF}')"

# Create the output filename based on the volume label
i=0
while true; do
	if [ $i -eq 0 ]; then
		FILENAME="$ISO_DIR/$LABEL.iso"
	else
		FILENAME="$ISO_DIR/${LABEL}_$i.iso"
	fi

	[[ -f "$FILENAME" ]] || break

	i="$((i + 1))"
done

TMP_FILENAME="${FILENAME%/*}/.${FILENAME##*/}.tmp"

# Calculate the size in bytes
SIZE="$((NUMBLOCKS * BLOCKSIZE))"

# Printing info
cat <<EOF
Reading CD/DVD:
- Name:      $LABEL
- Size:      $(numfmt --to=iec-i --format="%.2fB" "$SIZE")
- File Name: $FILENAME

EOF

# Write the data to the ISO file and then eject the CD/DVD drive
mkdir -p "$ISO_DIR"
truncate -s "$SIZE" "$TMP_FILENAME" &&
	pv -tpreb -s "$SIZE" "$DRIVE" | dd of="$TMP_FILENAME" bs="$BLOCKSIZE" count="$NUMBLOCKS" conv=notrunc status=none &&
	mv "$TMP_FILENAME" "$FILENAME"
chown -R nobody:nogroup "$ISO_DIR"
eject -r "$DRIVE"
